[tool.poetry]
name = "aletheia"
version = "0.1.0"
description = "A local-first thinking agent with hybrid LLM routing and vector memory"
authors = ["Aletheia Team"]
readme = "README.md"
packages = [{include = "aletheia"}]

[tool.poetry.dependencies]
python = "^3.11"
llama-cpp-python = {version = "^0.2.20", extras = ["server"]}
anthropic = "^0.39.0"
openai = "^1.6.0"
chromadb = "^0.4.18"
numpy = ">=1.24.4,<2.0.0"
pydantic = "^2.5.0"
python-dotenv = "^1.0.0"
aiohttp = "^3.9.0"
asyncio = "^3.4.3"
rich = "^13.7.0"
typer = "^0.9.0"
scikit-learn = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
ruff = "^0.1.8"
mypy = "^1.7.0"
black = "^23.11.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | models
    | data
  )/
)
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["S101", "T201", "PLR0913", "PLR0912", "COM812", "ISC001"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
aletheia = "aletheia.orchestrator:main" 
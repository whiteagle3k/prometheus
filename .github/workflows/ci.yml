name: Prometheus Tests

on:
  push:
    branches: [ main, develop, feature/*, feat/* ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: 3.11

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Run tests
      run: |
        poetry run pytest tests/ -v --tb=short
    
    - name: Run linting
      run: |
        # Run ruff check for syntax errors only - don't fail build on style issues
        echo "üîç Running code quality checks..."
        poetry run ruff check . --select=E9,F63,F7,F82 || echo "‚ö†Ô∏è Some code quality issues found but not blocking build"
        
        # Check basic code formatting but don't fail
        echo "üé® Checking code formatting..."
        poetry run black --check . || echo "‚ö†Ô∏è Code formatting could be improved but not blocking build"
        
        # Show a summary of all issues for awareness (but don't fail)
        echo "üìä Full linting report (for awareness only):"
        poetry run ruff check . --statistics || true
